AWSTemplateFormatVersion: 2010-09-09
Description: Plantilla para la creacion de un grupo de autoscaling y un proyecto de despliegue de AWS CodeDeploy
Parameters:
  AmiID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Description: ID de la AMI
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:
  miVPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Nombre: A
        VPC: 192.168.0.0/20
        SubredesPublicas: 'SI'
        SubredesPrivadas: SI
        SubredPublica1: 192.168.2.0/24
        SubredPublica2: 192.168.3.0/24
        SubredPrivada1: 192.168.0.0/24
        SubredPrivada2: 192.168.1.0/24
        NATGateways: 'SI'
        Bastion: 'NO'
      TemplateURL: ./vpc.yaml

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private 
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  GrupoSeguridadALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Trafico HTTP del ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
      VpcId: !GetAtt miVPC.Outputs.VPC

  ReglaEntradaEC2SG:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref GrupoSeguridadALB
      GroupId: !Ref GrupoSeguridadEC2
      FromPort: 80
      ToPort: 80

  GrupoSeguridadEC2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Trafico HTTP de las instancias EC2
      VpcId: !GetAtt miVPC.Outputs.VPC

  RolEC2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "PoliticaInstanciaEC2"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:Get*"
                  - "s3:List*"
                Resource:
                  - !Sub
                    - "arn:aws:s3:::${bucket}/*"
                    - bucket: !Ref Bucket
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"

  PerfilInstanciaEC2:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref RolEC2
      Path: "/"

  PlantillaLanzamiento:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref AmiID
        InstanceType: t3.small
        SecurityGroupIds:
          - !GetAtt GrupoSeguridadEC2.GroupId
        IamInstanceProfile: 
          Arn: !GetAtt PerfilInstanciaEC2.Arn
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install httpd ruby -y
            systemctl enable httpd
            systemctl start httpd
            echo "<h1>Hola Mundo!</h1>" > /var/www/html/index.html
            wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install
            chmod +x ./install
            ./install auto
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: CodeDeploy-Instance

  GrupoAutoEscalado:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !GetAtt miVPC.Outputs.Privada1
        - !GetAtt miVPC.Outputs.Privada2
      DesiredCapacity: 2
      MinSize: 2
      MaxSize: 6
      LaunchTemplate:
        Version: !GetAtt PlantillaLanzamiento.LatestVersionNumber
        LaunchTemplateId: !Ref PlantillaLanzamiento
      HealthCheckType: ELB
      TargetGroupARNs:
        - !GetAtt GrupoDestinos.TargetGroupArn

  Balanceador:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Type: application
      SecurityGroups:
        - !Ref GrupoSeguridadALB
      Subnets:
        - !GetAtt miVPC.Outputs.Publica1
        - !GetAtt miVPC.Outputs.Publica2

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref Balanceador
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref GrupoDestinos

  GrupoDestinos:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      TargetType: instance
      VpcId: !GetAtt miVPC.Outputs.VPC
      Protocol: HTTP
      Port: 80
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 90

  AplicacionDespliegue:
    Type: AWS::CodeDeploy::Application

  RolServicioCodeDeploy:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codedeploy.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"

  GrupoDespliegue:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref AplicacionDespliegue
      ServiceRoleArn: !GetAtt RolServicioCodeDeploy.Arn
      AutoScalingGroups:
        - !Ref GrupoAutoEscalado
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: IN_PLACE
      LoadBalancerInfo:
        TargetGroupInfoList:
          - Name: !GetAtt GrupoDestinos.TargetGroupName

Outputs:
  Bucket:
    Description: Bucket donde se depositan los paquetes de despliegue de las aplicaciones en formato ZIP
    Value: !Ref Bucket
  Aplicacion:
    Description: Aplicacion de AWS CodeDeploy
    Value: !Ref AplicacionDespliegue
  GrupoDespliegue:
    Description: Grupo de despliegue de la aplicacion de AWS CodeDeploy
    Value: !Ref GrupoDespliegue
  ALB:
    Description: Punto de enlace del ALB
    Value:
      !Sub
        - "http://${dns}"
        - dns: !GetAtt Balanceador.DNSName